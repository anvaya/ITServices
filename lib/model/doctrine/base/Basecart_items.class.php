<?php

/**
 * Basecart_items
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cart_id
 * @property integer $product_id
 * @property integer $quantity
 * @property decimal $price
 * @property cart $cart
 * @property product $product
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method integer    getCartId()     Returns the current record's "cart_id" value
 * @method integer    getProductId()  Returns the current record's "product_id" value
 * @method integer    getQuantity()   Returns the current record's "quantity" value
 * @method decimal    getPrice()      Returns the current record's "price" value
 * @method cart       getCart()       Returns the current record's "cart" value
 * @method product    getProduct()    Returns the current record's "product" value
 * @method cart_items setId()         Sets the current record's "id" value
 * @method cart_items setCartId()     Sets the current record's "cart_id" value
 * @method cart_items setProductId()  Sets the current record's "product_id" value
 * @method cart_items setQuantity()   Sets the current record's "quantity" value
 * @method cart_items setPrice()      Sets the current record's "price" value
 * @method cart_items setCart()       Sets the current record's "cart" value
 * @method cart_items setProduct()    Sets the current record's "product" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecart_items extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cart_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('cart_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('product_id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'notnull' => false,
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('quantity', 'integer', 2, array(
             'type' => 'integer',
             'size' => 2,
             'notnull' => false,
             'length' => 2,
             ));
        $this->hasColumn('price', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('cart', array(
             'local' => 'cart_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}