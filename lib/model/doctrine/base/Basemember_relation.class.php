<?php

/**
 * Basemember_relation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $member1
 * @property integer $member2
 * @property enum $relation
 * @property member $member
 * @property member $relatedMember
 * 
 * @method integer         getMember1()       Returns the current record's "member1" value
 * @method integer         getMember2()       Returns the current record's "member2" value
 * @method enum            getRelation()      Returns the current record's "relation" value
 * @method member          getMember()        Returns the current record's "member" value
 * @method member          getRelatedMember() Returns the current record's "relatedMember" value
 * @method member_relation setMember1()       Sets the current record's "member1" value
 * @method member_relation setMember2()       Sets the current record's "member2" value
 * @method member_relation setRelation()      Sets the current record's "relation" value
 * @method member_relation setMember()        Sets the current record's "member" value
 * @method member_relation setRelatedMember() Sets the current record's "relatedMember" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basemember_relation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('member_relation');
        $this->hasColumn('member1', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('member2', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('relation', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'P',
              1 => 'SP',
              2 => 'GP',
              3 => 'SB',
             ),
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('member', array(
             'local' => 'member1',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('member as relatedMember', array(
             'local' => 'member2',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}