<?php

/**
 * Basemember_subscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property integer $subscription_id
 * @property decimal $price
 * @property date $start_date
 * @property date $end_date
 * @property boolean $active
 * @property member $member
 * @property subscription $subscription
 * @property Doctrine_Collection $payment
 * @property Doctrine_Collection $product_usage
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getMemberId()        Returns the current record's "member_id" value
 * @method integer             getSubscriptionId()  Returns the current record's "subscription_id" value
 * @method decimal             getPrice()           Returns the current record's "price" value
 * @method date                getStartDate()       Returns the current record's "start_date" value
 * @method date                getEndDate()         Returns the current record's "end_date" value
 * @method boolean             getActive()          Returns the current record's "active" value
 * @method member              getMember()          Returns the current record's "member" value
 * @method subscription        getSubscription()    Returns the current record's "subscription" value
 * @method Doctrine_Collection getPayment()         Returns the current record's "payment" collection
 * @method Doctrine_Collection getProductUsage()    Returns the current record's "product_usage" collection
 * @method member_subscription setId()              Sets the current record's "id" value
 * @method member_subscription setMemberId()        Sets the current record's "member_id" value
 * @method member_subscription setSubscriptionId()  Sets the current record's "subscription_id" value
 * @method member_subscription setPrice()           Sets the current record's "price" value
 * @method member_subscription setStartDate()       Sets the current record's "start_date" value
 * @method member_subscription setEndDate()         Sets the current record's "end_date" value
 * @method member_subscription setActive()          Sets the current record's "active" value
 * @method member_subscription setMember()          Sets the current record's "member" value
 * @method member_subscription setSubscription()    Sets the current record's "subscription" value
 * @method member_subscription setPayment()         Sets the current record's "payment" collection
 * @method member_subscription setProductUsage()    Sets the current record's "product_usage" collection
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basemember_subscription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('member_subscription');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('member_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('subscription_id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'notnull' => true,
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('price', 'decimal', 18, array(
             'type' => 'decimal',
             'size' => 18,
             'scale' => 2,
             'length' => 18,
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('subscription', array(
             'local' => 'subscription_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('payment', array(
             'local' => 'id',
             'foreign' => 'subscription_id'));

        $this->hasMany('product_usage', array(
             'local' => 'id',
             'foreign' => 'member_subscription_id'));
    }
}