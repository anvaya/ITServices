<?php

/**
 * Baseitr_securities
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $submission_id
 * @property integer $category_id
 * @property string $details
 * @property string $purchase_info
 * @property date $date_sale
 * @property integer $quantity_sold
 * @property decimal $cost_acquisition
 * @property decimal $sell_value
 * @property decimal $brokerage_paid
 * @property decimal $other_expenses
 * @property string $addon_costs
 * @property string $addon_expenses
 * @property itr_submission $itr_submission
 * 
 * @method integer        getId()               Returns the current record's "id" value
 * @method integer        getSubmissionId()     Returns the current record's "submission_id" value
 * @method integer        getCategoryId()       Returns the current record's "category_id" value
 * @method string         getDetails()          Returns the current record's "details" value
 * @method string         getPurchaseInfo()     Returns the current record's "purchase_info" value
 * @method date           getDateSale()         Returns the current record's "date_sale" value
 * @method integer        getQuantitySold()     Returns the current record's "quantity_sold" value
 * @method decimal        getCostAcquisition()  Returns the current record's "cost_acquisition" value
 * @method decimal        getSellValue()        Returns the current record's "sell_value" value
 * @method decimal        getBrokeragePaid()    Returns the current record's "brokerage_paid" value
 * @method decimal        getOtherExpenses()    Returns the current record's "other_expenses" value
 * @method string         getAddonCosts()       Returns the current record's "addon_costs" value
 * @method string         getAddonExpenses()    Returns the current record's "addon_expenses" value
 * @method itr_submission getItrSubmission()    Returns the current record's "itr_submission" value
 * @method itr_securities setId()               Sets the current record's "id" value
 * @method itr_securities setSubmissionId()     Sets the current record's "submission_id" value
 * @method itr_securities setCategoryId()       Sets the current record's "category_id" value
 * @method itr_securities setDetails()          Sets the current record's "details" value
 * @method itr_securities setPurchaseInfo()     Sets the current record's "purchase_info" value
 * @method itr_securities setDateSale()         Sets the current record's "date_sale" value
 * @method itr_securities setQuantitySold()     Sets the current record's "quantity_sold" value
 * @method itr_securities setCostAcquisition()  Sets the current record's "cost_acquisition" value
 * @method itr_securities setSellValue()        Sets the current record's "sell_value" value
 * @method itr_securities setBrokeragePaid()    Sets the current record's "brokerage_paid" value
 * @method itr_securities setOtherExpenses()    Sets the current record's "other_expenses" value
 * @method itr_securities setAddonCosts()       Sets the current record's "addon_costs" value
 * @method itr_securities setAddonExpenses()    Sets the current record's "addon_expenses" value
 * @method itr_securities setItrSubmission()    Sets the current record's "itr_submission" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseitr_securities extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('itr_securities');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('submission_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             ));
        $this->hasColumn('category_id', 'integer', 1, array(
             'type' => 'integer',
             'size' => 1,
             'notnull' => false,
             'length' => 1,
             ));
        $this->hasColumn('details', 'string', 100, array(
             'type' => 'string',
             'size' => 100,
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('purchase_info', 'string', 600, array(
             'type' => 'string',
             'size' => 600,
             'notnull' => false,
             'length' => 600,
             ));
        $this->hasColumn('date_sale', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('quantity_sold', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('cost_acquisition', 'decimal', 19, array(
             'type' => 'decimal',
             'size' => 19,
             'scale' => 2,
             'notnull' => false,
             'length' => 19,
             ));
        $this->hasColumn('sell_value', 'decimal', 19, array(
             'type' => 'decimal',
             'size' => 19,
             'scale' => 2,
             'notnull' => false,
             'length' => 19,
             ));
        $this->hasColumn('brokerage_paid', 'decimal', 19, array(
             'type' => 'decimal',
             'size' => 19,
             'scale' => 2,
             'notnull' => false,
             'length' => 19,
             ));
        $this->hasColumn('other_expenses', 'decimal', 19, array(
             'type' => 'decimal',
             'size' => 19,
             'scale' => 2,
             'notnull' => false,
             'length' => 19,
             ));
        $this->hasColumn('addon_costs', 'string', 600, array(
             'type' => 'string',
             'size' => 600,
             'notnull' => false,
             'length' => 600,
             ));
        $this->hasColumn('addon_expenses', 'string', 600, array(
             'type' => 'string',
             'size' => 600,
             'notnull' => false,
             'length' => 600,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('itr_submission', array(
             'local' => 'submission_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}