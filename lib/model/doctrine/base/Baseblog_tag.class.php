<?php

/**
 * Baseblog_tag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $blog_id
 * @property integer $tag_id
 * @property blog $blog
 * @property tag $tag
 * 
 * @method integer  getId()      Returns the current record's "id" value
 * @method integer  getBlogId()  Returns the current record's "blog_id" value
 * @method integer  getTagId()   Returns the current record's "tag_id" value
 * @method blog     getBlog()    Returns the current record's "blog" value
 * @method tag      getTag()     Returns the current record's "tag" value
 * @method blog_tag setId()      Sets the current record's "id" value
 * @method blog_tag setBlogId()  Sets the current record's "blog_id" value
 * @method blog_tag setTagId()   Sets the current record's "tag_id" value
 * @method blog_tag setBlog()    Sets the current record's "blog" value
 * @method blog_tag setTag()     Sets the current record's "tag" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseblog_tag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_tag');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('blog_id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'notnull' => false,
             'length' => 8,
             ));
        $this->hasColumn('tag_id', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'unsigned' => true,
             'notnull' => false,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('blog', array(
             'local' => 'blog_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('tag', array(
             'local' => 'tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}