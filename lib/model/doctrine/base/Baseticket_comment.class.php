<?php

/**
 * Baseticket_comment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $ticket_id
 * @property boolean $is_reply
 * @property text $public_message
 * @property text $private_message
 * @property boolean $sent_to_customer
 * @property integer $replied_by
 * @property boolean $alert_sent
 * @property support_ticket $support_ticket
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $ticket_file
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getTicketId()         Returns the current record's "ticket_id" value
 * @method boolean             getIsReply()          Returns the current record's "is_reply" value
 * @method text                getPublicMessage()    Returns the current record's "public_message" value
 * @method text                getPrivateMessage()   Returns the current record's "private_message" value
 * @method boolean             getSentToCustomer()   Returns the current record's "sent_to_customer" value
 * @method integer             getRepliedBy()        Returns the current record's "replied_by" value
 * @method boolean             getAlertSent()        Returns the current record's "alert_sent" value
 * @method support_ticket      getSupportTicket()    Returns the current record's "support_ticket" value
 * @method sfGuardUser         getSfGuardUser()      Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getTicketFile()       Returns the current record's "ticket_file" collection
 * @method ticket_comment      setId()               Sets the current record's "id" value
 * @method ticket_comment      setTicketId()         Sets the current record's "ticket_id" value
 * @method ticket_comment      setIsReply()          Sets the current record's "is_reply" value
 * @method ticket_comment      setPublicMessage()    Sets the current record's "public_message" value
 * @method ticket_comment      setPrivateMessage()   Sets the current record's "private_message" value
 * @method ticket_comment      setSentToCustomer()   Sets the current record's "sent_to_customer" value
 * @method ticket_comment      setRepliedBy()        Sets the current record's "replied_by" value
 * @method ticket_comment      setAlertSent()        Sets the current record's "alert_sent" value
 * @method ticket_comment      setSupportTicket()    Sets the current record's "support_ticket" value
 * @method ticket_comment      setSfGuardUser()      Sets the current record's "sfGuardUser" value
 * @method ticket_comment      setTicketFile()       Sets the current record's "ticket_file" collection
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseticket_comment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ticket_comment');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('ticket_id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'notnull' => true,
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('is_reply', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('public_message', 'text', 5000, array(
             'type' => 'text',
             'size' => 5000,
             'notnull' => false,
             'length' => 5000,
             ));
        $this->hasColumn('private_message', 'text', 5000, array(
             'type' => 'text',
             'size' => 5000,
             'notnull' => false,
             'length' => 5000,
             ));
        $this->hasColumn('sent_to_customer', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('replied_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('alert_sent', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('support_ticket', array(
             'local' => 'ticket_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'replied_by',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('ticket_file', array(
             'local' => 'id',
             'foreign' => 'comment_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}