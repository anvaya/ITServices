<?php

/**
 * Baseproduct_usage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_subscription_id
 * @property integer $product_id
 * @property timestamp $from_time
 * @property timestamp $to_time
 * @property integer $units
 * @property integer $ip_address
 * @property member_subscription $member_subscription
 * @property product $product
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method integer             getMemberSubscriptionId()   Returns the current record's "member_subscription_id" value
 * @method integer             getProductId()              Returns the current record's "product_id" value
 * @method timestamp           getFromTime()               Returns the current record's "from_time" value
 * @method timestamp           getToTime()                 Returns the current record's "to_time" value
 * @method integer             getUnits()                  Returns the current record's "units" value
 * @method integer             getIpAddress()              Returns the current record's "ip_address" value
 * @method member_subscription getMemberSubscription()     Returns the current record's "member_subscription" value
 * @method product             getProduct()                Returns the current record's "product" value
 * @method product_usage       setId()                     Sets the current record's "id" value
 * @method product_usage       setMemberSubscriptionId()   Sets the current record's "member_subscription_id" value
 * @method product_usage       setProductId()              Sets the current record's "product_id" value
 * @method product_usage       setFromTime()               Sets the current record's "from_time" value
 * @method product_usage       setToTime()                 Sets the current record's "to_time" value
 * @method product_usage       setUnits()                  Sets the current record's "units" value
 * @method product_usage       setIpAddress()              Sets the current record's "ip_address" value
 * @method product_usage       setMemberSubscription()     Sets the current record's "member_subscription" value
 * @method product_usage       setProduct()                Sets the current record's "product" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseproduct_usage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_usage');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('member_subscription_id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'notnull' => true,
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('product_id', 'integer', 5, array(
             'type' => 'integer',
             'size' => 5,
             'notnull' => false,
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('from_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('to_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('units', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip_address', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('member_subscription', array(
             'local' => 'member_subscription_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}