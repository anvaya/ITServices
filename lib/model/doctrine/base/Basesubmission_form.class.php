<?php

/**
 * Basesubmission_form
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $form_code
 * @property varchar $form_name
 * @property boolean $disabled
 * @property integer $frequency
 * @property boolean $send_reminder
 * @property varchar $form_description
 * @property varchar $template_name
 * @property Doctrine_Collection $form_question
 * @property Doctrine_Collection $submission
 * @property Doctrine_Collection $submission_inner
 * @property Doctrine_Collection $product
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method varchar             getFormCode()         Returns the current record's "form_code" value
 * @method varchar             getFormName()         Returns the current record's "form_name" value
 * @method boolean             getDisabled()         Returns the current record's "disabled" value
 * @method integer             getFrequency()        Returns the current record's "frequency" value
 * @method boolean             getSendReminder()     Returns the current record's "send_reminder" value
 * @method varchar             getFormDescription()  Returns the current record's "form_description" value
 * @method varchar             getTemplateName()     Returns the current record's "template_name" value
 * @method Doctrine_Collection getFormQuestion()     Returns the current record's "form_question" collection
 * @method Doctrine_Collection getSubmission()       Returns the current record's "submission" collection
 * @method Doctrine_Collection getSubmissionInner()  Returns the current record's "submission_inner" collection
 * @method Doctrine_Collection getProduct()          Returns the current record's "product" collection
 * @method submission_form     setId()               Sets the current record's "id" value
 * @method submission_form     setFormCode()         Sets the current record's "form_code" value
 * @method submission_form     setFormName()         Sets the current record's "form_name" value
 * @method submission_form     setDisabled()         Sets the current record's "disabled" value
 * @method submission_form     setFrequency()        Sets the current record's "frequency" value
 * @method submission_form     setSendReminder()     Sets the current record's "send_reminder" value
 * @method submission_form     setFormDescription()  Sets the current record's "form_description" value
 * @method submission_form     setTemplateName()     Sets the current record's "template_name" value
 * @method submission_form     setFormQuestion()     Sets the current record's "form_question" collection
 * @method submission_form     setSubmission()       Sets the current record's "submission" collection
 * @method submission_form     setSubmissionInner()  Sets the current record's "submission_inner" collection
 * @method submission_form     setProduct()          Sets the current record's "product" collection
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basesubmission_form extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('submission_form');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('form_code', 'varchar', 40, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('form_name', 'varchar', 100, array(
             'type' => 'varchar',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('disabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('frequency', 'integer', 2, array(
             'type' => 'integer',
             'size' => 2,
             'notnull' => true,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('send_reminder', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('form_description', 'varchar', 500, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 500,
             ));
        $this->hasColumn('template_name', 'varchar', 40, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 40,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('form_question', array(
             'local' => 'id',
             'foreign' => 'form_id'));

        $this->hasMany('submission', array(
             'local' => 'id',
             'foreign' => 'form_id'));

        $this->hasMany('submission_inner', array(
             'local' => 'id',
             'foreign' => 'form_id'));

        $this->hasMany('product', array(
             'local' => 'id',
             'foreign' => 'form_id'));
    }
}