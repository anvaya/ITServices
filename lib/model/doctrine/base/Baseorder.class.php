<?php

/**
 * Baseorder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property varchar $order_no
 * @property date $order_date
 * @property integer $status
 * @property decimal $gross_amount
 * @property decimal $discount_amount
 * @property varchar $discount_voucher_no
 * @property integer $discount_percentage
 * @property decimal $tax_amount
 * @property decimal $net_amount
 * @property integer $payment_id
 * @property member $member
 * @property payment $payment
 * @property Doctrine_Collection $order_item
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getMemberId()            Returns the current record's "member_id" value
 * @method varchar             getOrderNo()             Returns the current record's "order_no" value
 * @method date                getOrderDate()           Returns the current record's "order_date" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method decimal             getGrossAmount()         Returns the current record's "gross_amount" value
 * @method decimal             getDiscountAmount()      Returns the current record's "discount_amount" value
 * @method varchar             getDiscountVoucherNo()   Returns the current record's "discount_voucher_no" value
 * @method integer             getDiscountPercentage()  Returns the current record's "discount_percentage" value
 * @method decimal             getTaxAmount()           Returns the current record's "tax_amount" value
 * @method decimal             getNetAmount()           Returns the current record's "net_amount" value
 * @method integer             getPaymentId()           Returns the current record's "payment_id" value
 * @method member              getMember()              Returns the current record's "member" value
 * @method payment             getPayment()             Returns the current record's "payment" value
 * @method Doctrine_Collection getOrderItem()           Returns the current record's "order_item" collection
 * @method order               setId()                  Sets the current record's "id" value
 * @method order               setMemberId()            Sets the current record's "member_id" value
 * @method order               setOrderNo()             Sets the current record's "order_no" value
 * @method order               setOrderDate()           Sets the current record's "order_date" value
 * @method order               setStatus()              Sets the current record's "status" value
 * @method order               setGrossAmount()         Sets the current record's "gross_amount" value
 * @method order               setDiscountAmount()      Sets the current record's "discount_amount" value
 * @method order               setDiscountVoucherNo()   Sets the current record's "discount_voucher_no" value
 * @method order               setDiscountPercentage()  Sets the current record's "discount_percentage" value
 * @method order               setTaxAmount()           Sets the current record's "tax_amount" value
 * @method order               setNetAmount()           Sets the current record's "net_amount" value
 * @method order               setPaymentId()           Sets the current record's "payment_id" value
 * @method order               setMember()              Sets the current record's "member" value
 * @method order               setPayment()             Sets the current record's "payment" value
 * @method order               setOrderItem()           Sets the current record's "order_item" collection
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseorder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('member_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('order_no', 'varchar', 30, array(
             'type' => 'varchar',
             'notnull' => false,
             'unique' => true,
             'length' => 30,
             ));
        $this->hasColumn('order_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'integer', 2, array(
             'type' => 'integer',
             'size' => 2,
             'notnull' => false,
             'length' => 2,
             ));
        $this->hasColumn('gross_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('discount_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('discount_voucher_no', 'varchar', 30, array(
             'type' => 'varchar',
             'notnull' => false,
             'unique' => true,
             'length' => 30,
             ));
        $this->hasColumn('discount_percentage', 'integer', 2, array(
             'type' => 'integer',
             'size' => 2,
             'notnull' => false,
             'length' => 2,
             ));
        $this->hasColumn('tax_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('net_amount', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('payment_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('payment', array(
             'local' => 'payment_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('order_item', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}