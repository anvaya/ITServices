<?php

/**
 * Baseblog_comment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $blog_id
 * @property integer $author_id
 * @property text $comment_text
 * @property integer $approved
 * @property integer $parent_comment_id
 * @property boolean $is_read
 * @property blog $blog
 * @property member $member
 * 
 * @method integer      getId()                Returns the current record's "id" value
 * @method integer      getBlogId()            Returns the current record's "blog_id" value
 * @method integer      getAuthorId()          Returns the current record's "author_id" value
 * @method text         getCommentText()       Returns the current record's "comment_text" value
 * @method integer      getApproved()          Returns the current record's "approved" value
 * @method integer      getParentCommentId()   Returns the current record's "parent_comment_id" value
 * @method boolean      getIsRead()            Returns the current record's "is_read" value
 * @method blog         getBlog()              Returns the current record's "blog" value
 * @method member       getMember()            Returns the current record's "member" value
 * @method blog_comment setId()                Sets the current record's "id" value
 * @method blog_comment setBlogId()            Sets the current record's "blog_id" value
 * @method blog_comment setAuthorId()          Sets the current record's "author_id" value
 * @method blog_comment setCommentText()       Sets the current record's "comment_text" value
 * @method blog_comment setApproved()          Sets the current record's "approved" value
 * @method blog_comment setParentCommentId()   Sets the current record's "parent_comment_id" value
 * @method blog_comment setIsRead()            Sets the current record's "is_read" value
 * @method blog_comment setBlog()              Sets the current record's "blog" value
 * @method blog_comment setMember()            Sets the current record's "member" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseblog_comment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_comment');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('blog_id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('comment_text', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('approved', 'integer', 1, array(
             'type' => 'integer',
             'size' => 1,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('parent_comment_id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'notnull' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_read', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('blog', array(
             'local' => 'blog_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('member', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}